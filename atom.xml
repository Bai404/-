<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bai&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-06T11:51:11.379Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Bai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js高级之运动系列（匀速运动/缓冲运动/弹性运动）</title>
    <link href="http://yoursite.com/2019/01/06/JS_moves/"/>
    <id>http://yoursite.com/2019/01/06/JS_moves/</id>
    <published>2019-01-06T11:40:03.094Z</published>
    <updated>2019-01-06T11:51:11.379Z</updated>
    
    <content type="html"><![CDATA[<h2 id="匀速运动"><a href="#匀速运动" class="headerlink" title="匀速运动"></a>匀速运动</h2><p>鼠标经过，匀速运动开始<br>css部分<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">left</span>:-<span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">right</span>:-<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line">       <span class="attribute">-moz-transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line">        <span class="attribute">-ms-transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line">         <span class="attribute">-o-transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>布局<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>匀速<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> box=<span class="built_in">document</span>.getElementsByClassName(<span class="string">"box"</span>)[<span class="number">0</span>];</span><br><span class="line">    box.onmouseover=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        startMove(box,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    box.onmouseout=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        startMove(box,<span class="number">-150</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> timer=<span class="literal">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,target</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> speed=<span class="number">0</span>;</span><br><span class="line">    clearInterval(timer);</span><br><span class="line">    timer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(obj.offsetLeft&lt;target)&#123;</span><br><span class="line">            speed=<span class="number">10</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            speed=<span class="number">-10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(obj.offsetLeft==target)&#123;</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            obj.style.left=obj.offsetLeft+speed+<span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;,<span class="number">30</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="简单缓冲运动并回到原点"><a href="#简单缓冲运动并回到原点" class="headerlink" title="简单缓冲运动并回到原点"></a>简单缓冲运动并回到原点</h2><p>布局部分，嘿嘿以简单为主。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"开始"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"回到原点"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>css部分<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> box=<span class="built_in">document</span>.getElementsByClassName(<span class="string">"box"</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> back=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> timer=<span class="literal">null</span>;</span><br><span class="line">        btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        startMove(box,<span class="number">700</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//缓冲运动部分</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">elem,target</span>)</span>&#123;</span><br><span class="line">            clearTimeout(timer);</span><br><span class="line">            timer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> speed=(target-elem.offsetLeft)/<span class="number">10</span>;</span><br><span class="line">                speed=speed&gt;<span class="number">0</span>?<span class="built_in">Math</span>.ceil((target-elem.offsetLeft)/<span class="number">10</span>):<span class="built_in">Math</span>.floor((target-elem.offsetLeft)/<span class="number">10</span>);</span><br><span class="line">                <span class="keyword">if</span>(target==elem.offsetLeft)&#123;</span><br><span class="line">                    clearTimeout(timer);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    elem.style.left=elem.offsetLeft+speed+<span class="string">"px"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">100</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        back.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            startMove(box,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//回到原点部分</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">backMove</span>(<span class="params">elem,target</span>)</span>&#123;</span><br><span class="line">            clearTimeout(timer);</span><br><span class="line">            timer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> speed=<span class="built_in">Math</span>.floor((target-elem.offsetLeft)/<span class="number">10</span>);</span><br><span class="line">                <span class="keyword">if</span>(target==elem.offsetLeft)&#123;</span><br><span class="line">                    clearTimeout(timer);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    elem.style.left=elem.offsetLeft+speed+<span class="string">"px"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">100</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="弹性运动"><a href="#弹性运动" class="headerlink" title="弹性运动"></a>弹性运动</h2><p>一个运动的盒子，一个开始的按钮，一条终点线.，我设置这条线的原因是方便看出效果，也可以不设啦。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"开始"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>javaScript代码如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> btn=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">var</span> box=<span class="built_in">document</span>.getElementsByClassName(<span class="string">"box"</span>)[<span class="number">0</span>];</span><br><span class="line">            btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                startMove(box,<span class="number">700</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> timer=<span class="literal">null</span>;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">elem,target</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> speed=<span class="number">0</span>;</span><br><span class="line">                timer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    speed+=(target-elem.offsetLeft)/<span class="number">8</span>;</span><br><span class="line">                    speed*=<span class="number">0.7</span>;</span><br><span class="line">                    <span class="comment">//我觉得0.7的效果好一点</span></span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(speed)&lt;<span class="number">1</span>&amp;&amp;<span class="built_in">Math</span>.abs(elem.offsetLeft-target)&lt;<span class="number">1</span>)&#123;</span><br><span class="line">                        clearTimeout(timer);</span><br><span class="line">                        elem.style.left=target+<span class="string">"px"</span>;<span class="comment">//回到终点位置</span></span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        elem.style.left=elem.offsetLeft+speed+<span class="string">"px"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,<span class="number">100</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>为了使刚好在终点线的位置做弹性运动，传入参数target就是终点线距离盒子的位置。<br>css部分<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;匀速运动&quot;&gt;&lt;a href=&quot;#匀速运动&quot; class=&quot;headerlink&quot; title=&quot;匀速运动&quot;&gt;&lt;/a&gt;匀速运动&lt;/h2&gt;&lt;p&gt;鼠标经过，匀速运动开始&lt;br&gt;css部分&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>学习镜像概念</title>
    <link href="http://yoursite.com/2019/01/06/Mirroring/"/>
    <id>http://yoursite.com/2019/01/06/Mirroring/</id>
    <published>2019-01-06T10:57:30.108Z</published>
    <updated>2019-01-06T11:31:05.449Z</updated>
    
    <content type="html"><![CDATA[<p>在自学Node.js过程中，看到有说国内直接使用 npm 的官方镜像是非常慢的，推荐使用淘宝 NPM 镜像。由于是半路出家没有很好的计算机基础知识，并不清楚镜像的概念。<br><em>镜像（Mirroring）是冗余的一种类型，一个磁盘上的数据在另一个磁盘上存在一个完全相同的副本即为镜像。</em><br><em>镜像是一种文件存储形式，可以把许多文件做成一个镜像文件。所谓镜像文件其实和ZIP压缩包类似，它将特定的一系列文件按照一定的格式制作成单一的文件，以方便用户下载和使用，例如一个测试版的操作系统、游戏等。</em><br>自己的理解就是：A的东西全部合成一个文件，B把它复制了过来，我们用软件打开B，B会从一个文件变成有许多文件的另一个A。<br>那npm官方镜像就是我们从npm服务器中把需要的包镜像储存到自己的电脑上。<br>即使小知识点也值得花心思去弄懂鸭，每天进步一点点。!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在自学Node.js过程中，看到有说国内直接使用 npm 的官方镜像是非常慢的，推荐使用淘宝 NPM 镜像。由于是半路出家没有很好的计算机基础知识，并不清楚镜像的概念。&lt;br&gt;&lt;em&gt;镜像（Mirroring）是冗余的一种类型，一个磁盘上的数据在另一个磁盘上存在一个完全相同
      
    
    </summary>
    
      <category term="Computer Basics" scheme="http://yoursite.com/categories/Computer-Basics/"/>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="镜像" scheme="http://yoursite.com/tags/%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>Git新手使用总结</title>
    <link href="http://yoursite.com/2019/01/06/Git/"/>
    <id>http://yoursite.com/2019/01/06/Git/</id>
    <published>2019-01-06T10:54:37.397Z</published>
    <updated>2019-01-06T11:43:46.672Z</updated>
    
    <content type="html"><![CDATA[<hr><p>开始学习使用git bash惹，一边摸索一边记录下自己的学习过程。</p><h1 id="关于Git"><a href="#关于Git" class="headerlink" title="关于Git"></a>关于Git</h1><h2 id="Git是什么"><a href="#Git是什么" class="headerlink" title="Git是什么"></a>Git是什么</h2><p>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><h2 id="Git的主要功能：版本控制"><a href="#Git的主要功能：版本控制" class="headerlink" title="Git的主要功能：版本控制"></a>Git的主要功能：版本控制</h2><p>关于版本控制我是这样理解的：一个文件你做了修改，得到一个新的版本，可很多时候你无法使文件回到以前的样子。所以很多人会选择把修改过后的保存到一个新文件中。久而久之文件越来越多，你很难弄清楚哪个文件做了什么修改。这个时候就需要进行版本管理。<br>Git来对这些不同的版本进行控制。还可以很方便地查看两个不同版本之间的不同之处。</p><h2 id="Git的工作流程"><a href="#Git的工作流程" class="headerlink" title="Git的工作流程"></a>Git的工作流程</h2><ul><li>克隆 Git 资源作为工作目录。</li><li>在克隆的资源上添加或修改文件。</li><li>如果其他人修改了，你可以更新资源。</li><li>在提交前查看修改。</li><li>提交修改。</li><li>在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。<br><img src="https://img-blog.csdnimg.cn/20181229175500760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="工作区、暂存区和版本库"><a href="#工作区、暂存区和版本库" class="headerlink" title="工作区、暂存区和版本库"></a>工作区、暂存区和版本库</h2></li><li>工作区：就是你在电脑里能看到的目录。</li><li>暂存区：英文叫stage, 或index。一般存放在 “.git目录下” 下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li><li>版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。<br><img src="https://img-blog.csdnimg.cn/2018122920345265.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">我们把文件往Git版本库里添加的时候，是分两步执行的：</li></ul><p>第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；<br>第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。<br>以下是菜鸟对这些知识的解释：</p><blockquote><p>图中的 objects 标识的区域为 Git 的对象库，实际位于 “.git/objects” 目录下，里面包含了创建的各种对象及内容。<br>当对工作区修改（或新增）的文件执行 “git add” 命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的ID被记录在暂存区的文件索引中。<br>当执行提交操作（git commit）时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即 master 指向的目录树就是提交时暂存区的目录树。<br>当执行 “git reset HEAD” 命令时，暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。<br>当执行 “git rm –cached <file>“ 命令时，会直接从暂存区删除文件，工作区则不做出改变。<br>当执行 “git checkout .” 或者 “git checkout – <file>“ 命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。<br>当执行 “git checkout HEAD .” 或者 “git checkout HEAD <file>“ 命令时，会用 HEAD 指向的 master 分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。</file></file></file></p></blockquote><hr><h1 id="Git-bash使用"><a href="#Git-bash使用" class="headerlink" title="Git bash使用"></a>Git bash使用</h1><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>申请了自己的github账号，下载git之后打开git bash。<br>配置本机的用户名和邮箱。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure><h2 id="本地使用"><a href="#本地使用" class="headerlink" title="本地使用"></a>本地使用</h2><h4 id="创建仓库并初始化"><a href="#创建仓库并初始化" class="headerlink" title="创建仓库并初始化"></a>创建仓库并初始化</h4><p>新建一个文件夹，在目录下建一个test文本，**创建test.txt的时候记得编码设置为UTF8，否则会出现乱码。右键点击git bash。<br><img src="https://img-blog.csdnimg.cn/20181230085923641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>test的内容随便写啦。。。。<br><img src="https://img-blog.csdnimg.cn/20181230085943295.PNG" alt="在这里插入图片描述"><br>输入git init初始化仓库<br><img src="https://img-blog.csdnimg.cn/2018123009003328.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>.git文件自动生成了，作用上文已经讲过啦，不能删噢。</p><h4 id="文件添加和提交"><a href="#文件添加和提交" class="headerlink" title="文件添加和提交"></a>文件添加和提交</h4><blockquote><p>$ git add 文件名.文件类型</p></blockquote><p>添加我们之前创建的test文件<br>如果一个个添加太麻烦惹，我们还有其他方法！</p><blockquote><p>git add -A 提交所有变化<br>git add -u 提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)<br>git add . 提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件</p></blockquote><p>by the way! <strong>我们可以使用git status来查看状态</strong><br><img src="https://img-blog.csdnimg.cn/20181230090058109.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加成功辣，我们先在可commit了</p><blockquote><p>$ git commit -m “修改注释”<br>提交后git log可以查看日志！</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20181230090118731.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="文件修改"><a href="#文件修改" class="headerlink" title="文件修改"></a>文件修改</h4><p><img src="https://img-blog.csdnimg.cn/20181230090139532.PNG" alt="在这里插入图片描述"><br>我们添加文件后，文件开始被追踪了，这时我们可以git status看看两次的不同喔！<br><img src="https://img-blog.csdnimg.cn/2018123009023210.PNG" alt="在这里插入图片描述"><br>怎么看我们修改了什么呢？</p><blockquote><p>使用$ git diff 文件名+类型</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20181230090327794.PNG" alt="在这里插入图片描述"></p><p>也可以查看文件的内容</p><blockquote><p>$ cat 文件名<br>这个要注意的是必须在文件夹里有那个文件你才可以查看。</p></blockquote><p>如果我现在想撤销更改，执行git checkout – .<br><img src="https://img-blog.csdnimg.cn/20181230091729615.PNG" alt="在这里插入图片描述"><br>然后打开文件看看，它果然复原辣！<br><img src="https://img-blog.csdnimg.cn/20181230092051271.PNG" alt="在这里插入图片描述"><br>然后我们再次修改文件内容。<br><img src="https://img-blog.csdnimg.cn/20181230092437888.PNG" alt="在这里插入图片描述"><br>执行添加，提交步骤。查看日志可以看到两个版本辣。<br><img src="https://img-blog.csdnimg.cn/2018123009283117.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h4><p>从上面的提交日志，黄色commit后面的一串数字，我们把它称为版本号吧！版本回退命令 :</p><blockquote><p>$ git reset –hard 版本号前7位</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20181230094604557.PNG" alt="在这里插入图片描述"><br>查看文件，已经回到第一个状态了！<br><img src="https://img-blog.csdnimg.cn/20181230094713705.PNG" alt="在这里插入图片描述"><br>这是再git log查看日志，commit记录只有一个了，<br><img src="https://img-blog.csdnimg.cn/2018123009492253.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>想了解版本回退的原理看廖雪峰老师这个解释！很清楚鸭！</p><blockquote><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013744142037508cf42e51debf49668810645e02887691000/" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013744142037508cf42e51debf49668810645e02887691000/</a></p></blockquote><h4 id="版本恢复"><a href="#版本恢复" class="headerlink" title="版本恢复"></a>版本恢复</h4><p>输入git reflog查看之前的版本，然后再次git reset –hard到需要的版本即可。<br><img src="https://img-blog.csdnimg.cn/20181230095349383.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="本地仓库关联远程仓库"><a href="#本地仓库关联远程仓库" class="headerlink" title="本地仓库关联远程仓库"></a>本地仓库关联远程仓库</h2><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><p>首先生成ssh</p><blockquote><p>$ssh-keygen -t rsa -C “你的邮箱”</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20181230214924368.PNG" alt="在这里插入图片描述"><br>出现了这两行。这是让你输入保存这个秘钥的文件，不输入直接回车它会自动生成。<br>回车以后让你输入push的时候需要的密码，也可以不输入直接回车，这样push的时候就没有密码。<br>再回车。<br><img src="https://img-blog.csdnimg.cn/20181230220029756.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样ssh key已经创建成功辣<br>然后我们输入以下命令复制ssh key</p><blockquote><p>clip &lt; ~/.ssh/id_rsa.pub</p></blockquote><p>进入github，进入Settings<br><img src="https://img-blog.csdnimg.cn/20181230220614729.png" alt="在这里插入图片描述"><br>点击左边的ssh and GPG keys<br><img src="https://img-blog.csdnimg.cn/20181230220643495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击New SSH key，title随便起就好辣，然后把之前复制的ssh key粘贴，然后点击下面的Add SSH key。<br><img src="https://img-blog.csdnimg.cn/20181230221256777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p> 添加成功后你的邮箱会受到信息！执行以下命令测试连接是否成功。</p><blockquote><p>$ ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p></blockquote><p>连接成功<br><img src="https://img-blog.csdnimg.cn/20181230221839812.PNG" alt="在这里插入图片描述"><br>这里出现了SSH警告 Are you sure you want to continue connecting (yes/no)?</p><blockquote><p>这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。<br>Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：Warning: Permanently added ‘github.com’ (RSA) to the list of known hosts.<br>这个警告只会出现一次，后面的操作就不会有任何警告了。</p></blockquote><h4 id="本地连接github仓库"><a href="#本地连接github仓库" class="headerlink" title="本地连接github仓库"></a>本地连接github仓库</h4><p>创建一个新仓库<br><img src="https://img-blog.csdnimg.cn/20181230222655635.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20181230223318518.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>复制SSH地址，然后执行以下命令</p><blockquote><p>$git remote add origin 你复制的地址</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20181230225904518.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我的出现了fatal: remote origin already exists.错误，解决方案如图所示。<br><em>输入git remote -v验证一下会出现你添加成功的远程仓库。</em><br><em>如果你以后不想连接这个远程仓库了，只需要输入git remote remove +代称即可</em></p><blockquote><p>by the way!如果你在创建 repository 的时候，加入了 README.md 或者 LICENSE ，那么 github 会拒绝你的 push 。你需要先执行 git pull origin master。</p></blockquote><p>然后执行如下命令：把本地仓库上传至Github的仓库并进行关联</p><blockquote><p>$ git push -u origin master</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20181230230206553.PNG" alt="在这里插入图片描述"><br>刷新github，关联成功了。<br><img src="https://img-blog.csdnimg.cn/20181230230501475.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="克隆远程库"><a href="#克隆远程库" class="headerlink" title="克隆远程库"></a>克隆远程库</h4><p>执行 git clone 复制的SSH地址</p><p>如果是直接clone了别人的仓库是没法push自己的修改的。你需要先fork到自己的远程仓库，然后再从自己那里clone。<br>如果clone了一个项目，并想为这个项目贡献自己的力量，你就可以往自己的仓库推送！然后在GitHub上发起一个pull request。</p><h4 id="本地更新远程仓库的修改"><a href="#本地更新远程仓库的修改" class="headerlink" title="本地更新远程仓库的修改"></a>本地更新远程仓库的修改</h4><p>因为一个项目有很多人参与，如果远程仓库改变了，你想确保自己的文件和远程的一样。执行以下代码</p><blockquote><p>$ git pull origin</p></blockquote><p>或者</p><blockquote><p>可以输入两句“git fetch”和“git merge”<br>$ git fetch<br>$ git merge</p></blockquote><p>以下是我学习的一些博客，感谢这些大神们无私的分享！</p><blockquote><p><a href="https://blog.csdn.net/qazwsxpcm/article/details/68946736?utm_source=blogxgwz0#t1" target="_blank" rel="noopener">https://blog.csdn.net/qazwsxpcm/article/details/68946736?utm_source=blogxgwz0#t1</a></p><p><a href="http://www.cnblogs.com/schaepher/p/5561193.html#function" target="_blank" rel="noopener">http://www.cnblogs.com/schaepher/p/5561193.html#function</a></p><p><a href="https://blog.csdn.net/qq_36667170/article/details/79085301#t0" target="_blank" rel="noopener">https://blog.csdn.net/qq_36667170/article/details/79085301#t0</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;开始学习使用git bash惹，一边摸索一边记录下自己的学习过程。&lt;/p&gt;
&lt;h1 id=&quot;关于Git&quot;&gt;&lt;a href=&quot;#关于Git&quot; class=&quot;headerlink&quot; title=&quot;关于Git&quot;&gt;&lt;/a&gt;关于Git&lt;/h1&gt;&lt;h2 id=&quot;Git是什么&quot;
      
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>javaScript编程题之检测字符串中出现次数最多的字符</title>
    <link href="http://yoursite.com/2019/01/06/most/"/>
    <id>http://yoursite.com/2019/01/06/most/</id>
    <published>2019-01-06T10:53:10.737Z</published>
    <updated>2019-01-06T11:32:05.076Z</updated>
    
    <content type="html"><![CDATA[<p>方法一：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"aaaaakkkkkkssssaaggggssjjjjjsssaa"</span>;</span><br><span class="line"><span class="keyword">var</span> obj=&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> max,maxNum;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;str.length;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!obj[str[i]])&#123;</span><br><span class="line">        obj[str[i]]=<span class="number">1</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        obj[str[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">max=<span class="number">0</span>,maxNum=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="keyword">if</span>(obj[i]&gt;max)&#123;</span><br><span class="line">        max=obj[i];</span><br><span class="line">        maxNum=i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(maxNum,max);</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"aaaaakkkkkkssssssjjjjjsssaa"</span>;</span><br><span class="line"><span class="keyword">var</span> arr=str.split(<span class="string">""</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMost</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev,next</span>)</span>&#123;</span><br><span class="line">        prev[next]=prev[next]+<span class="number">1</span>||<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> prev;</span><br><span class="line">    &#125;,&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(getMost(arr));</span><br></pre></td></tr></table></figure><p>如果刚看这个方法不理解，可以先熟悉一下reduce方法回掉函数各个参数的意义。<br>reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。<br><strong>语法：</strong> array.reduce(function(total, currentValue, currentIndex, arr), initialValue)</p><p>total    必需。初始值, 或者计算结束后的返回值。<br>currentValue    必需。当前元素<br>currentIndex    可选。当前元素的索引<br>arr    可选。当前元素所属的数组对象。<br>initialValue：可选项，其值用于第一次调用 callback 的第一个参数。如果没有设置初始值，则将数组中的第一个元素作为初始值。==空数组调用reduce时没有设置初始值将会报错。==</p><p>看一下以下这编程题可以帮助理解reduce方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">查找数组对象中 age 大于 18 对象</span><br><span class="line">&#123;age: 19, name:'Jack'&#125;,</span><br><span class="line">&#123;age: 5, name:'Apple'&#125;,</span><br><span class="line">&#123;age: 12, name:'Lynn'&#125;,</span><br><span class="line">&#123;age: 25, name:'David'&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> arr=[&#123;<span class="attr">age</span>: <span class="number">19</span>, <span class="attr">name</span>:<span class="string">'Jack'</span>&#125;,&#123;<span class="attr">age</span>: <span class="number">5</span>, <span class="attr">name</span>:<span class="string">'Apple'</span>&#125;,&#123;<span class="attr">age</span>: <span class="number">12</span>, <span class="attr">name</span>:<span class="string">'Lynn'</span>&#125;,&#123;<span class="attr">age</span>: <span class="number">25</span>, <span class="attr">name</span>:<span class="string">'David'</span>&#125;];</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">adult</span>(<span class="params">array</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> target=array.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> (item.age&gt;<span class="number">18</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> target;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(adult(arr));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;方法一：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS实现抽奖大转盘</title>
    <link href="http://yoursite.com/2019/01/06/turningTable/"/>
    <id>http://yoursite.com/2019/01/06/turningTable/</id>
    <published>2019-01-06T10:49:53.561Z</published>
    <updated>2019-01-06T11:30:24.460Z</updated>
    
    <content type="html"><![CDATA[<p>今天试了试自己写个抽奖大转盘。<br>先是借了两张别人的图片：<br><img src="https://img-blog.csdnimg.cn/20181126103321475.png" alt="指针"><br><img src="https://img-blog.csdnimg.cn/20181126103352754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczODczMQ==,size_16,color_FFFFFF,t_70" alt="转盘"><br>下面是布局部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"round"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"turntable.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"pointer.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css部分:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.round</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">450px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">138px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">94px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来是JavaScript部分,并使用了css3：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> round=<span class="built_in">document</span>.getElementsByClassName(<span class="string">"round"</span>)[<span class="number">0</span>];</span><br><span class="line">   <span class="keyword">var</span> box=round.getElementsByClassName(<span class="string">"box"</span>)[<span class="number">0</span>].children[<span class="number">0</span>];</span><br><span class="line">   <span class="keyword">var</span> btn=round.getElementsByClassName(<span class="string">"btn"</span>)[<span class="number">0</span>];</span><br><span class="line">   btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">var</span> deg=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">360</span>);</span><br><span class="line">       <span class="keyword">var</span> num=<span class="number">8</span>;</span><br><span class="line">       <span class="keyword">var</span> rotateDeg=num*<span class="number">360</span>+deg;</span><br><span class="line">       box.style.transform=<span class="string">"rotate("</span>+rotateDeg+<span class="string">"deg)"</span>;</span><br><span class="line">       box.style.transition=<span class="string">"5s"</span>;</span><br><span class="line">       setTimeout(<span class="string">"res("</span>+deg+<span class="string">")"</span>,<span class="number">5000</span>)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">res</span>(<span class="params">deg</span>)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(deg&gt;=<span class="number">0</span>&amp;&amp;deg&lt;=<span class="number">51</span>)&#123;</span><br><span class="line">           alert(<span class="string">"免单4999"</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(deg&gt;<span class="number">51</span>&amp;&amp;deg&lt;=<span class="number">102</span>)&#123;</span><br><span class="line">           alert(<span class="string">"免单50"</span>)</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(deg&gt;<span class="number">102</span>&amp;&amp;deg&lt;=<span class="number">153</span>)&#123;</span><br><span class="line">           alert(<span class="string">"免单10"</span>)</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(deg&gt;<span class="number">153</span>&amp;&amp;deg&lt;=<span class="number">204</span>)&#123;</span><br><span class="line">           alert(<span class="string">"免单5"</span>)</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(deg&gt;<span class="number">204</span>&amp;&amp;deg&lt;=<span class="number">255</span>)&#123;</span><br><span class="line">           alert(<span class="string">"免分期"</span>)</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(deg&gt;<span class="number">255</span>&amp;&amp;deg&lt;=<span class="number">306</span>)&#123;</span><br><span class="line">           alert(<span class="string">"提额度"</span>)</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           alert(<span class="string">"未中奖"</span>)</span><br><span class="line">       &#125;</span><br><span class="line">       box.dataset.rotate=deg;</span><br><span class="line">       box.style.transform=<span class="string">"rotate("</span>+deg+<span class="string">"deg)"</span>;</span><br><span class="line">       box.style.transition=<span class="string">""</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天试了试自己写个抽奖大转盘。&lt;br&gt;先是借了两张别人的图片：&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20181126103321475.png&quot; alt=&quot;指针&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img-blog.c
      
    
    </summary>
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS写斐波那契数列的几种方法</title>
    <link href="http://yoursite.com/2019/01/06/fibonacci/"/>
    <id>http://yoursite.com/2019/01/06/fibonacci/</id>
    <published>2019-01-06T10:42:17.722Z</published>
    <updated>2019-01-06T10:46:22.173Z</updated>
    
    <content type="html"><![CDATA[<p><strong>方法1</strong> 最直观的解题思路.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibonacci</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num1= <span class="number">1</span>,num2= <span class="number">1</span>,sum;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">3</span>; i &lt;= n; i += <span class="number">1</span>) &#123;</span><br><span class="line">        sum = num1 + num2</span><br><span class="line">        num1 = num2</span><br><span class="line">        num2 = sum</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//稍微改进一下以上的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibonaccii</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num1=<span class="number">1</span>,num2=<span class="number">1</span>,num3;</span><br><span class="line">    <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        num3=num1+num2;</span><br><span class="line">        num1=num2;</span><br><span class="line">        num2=num3;</span><br><span class="line">        arr.push(num3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法2</strong> 使用递归的方法, 但是当数字过大时浏览器会出现假死现象。毕竟递归需要堆栈，数字过大内存不够。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">result</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> result(n<span class="number">-2</span>)+result(n<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//同样使用递归，只不过使用了三元表达式。</span></span><br><span class="line">    <span class="keyword">var</span> fib=<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n&lt;<span class="number">2</span>?n:fib(n<span class="number">-1</span>)+fib(n<span class="number">-2</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">10</span>;i+=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(fib(i));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>方法3</strong> 使用“记忆”方法减少运算量。在一个数组里保存我们的储存结果，储存结果隐藏在闭包中.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> fibonaci=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> memo=[<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">var</span> fib=<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> result=memo[n];</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> result!==<span class="string">'number'</span>)&#123;</span><br><span class="line">                result=fib(n<span class="number">-1</span>)+fib(n<span class="number">-2</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> fib;</span><br><span class="line">    &#125;();</span><br><span class="line"><span class="comment">// 我们可以把这种技术推而广之</span></span><br><span class="line"><span class="comment">//编写一个函数来帮助我们构造带记忆功能的函数.</span></span><br><span class="line">    <span class="keyword">var</span> memoizer=<span class="function"><span class="keyword">function</span>(<span class="params">memo,formula</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> recur=<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> result=memo[n];</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> result!==<span class="string">'number'</span>)&#123;</span><br><span class="line">                result=formula(recur,n);</span><br><span class="line">                memo[n]=result;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> recur;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> fib=memoizer([<span class="number">0</span>,<span class="number">1</span>],<span class="function"><span class="keyword">function</span>(<span class="params">recur,n</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> recur(n<span class="number">-1</span>)+recur(n<span class="number">-2</span>);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><strong>方法4</strong> 使用ES6中的generator</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">fib</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> b=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&lt;=x)&#123;</span><br><span class="line">        <span class="keyword">yield</span> a;</span><br><span class="line">        [a,b]=[b,a+b];</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(fib(<span class="number">5</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;方法1&lt;/strong&gt; 最直观的解题思路.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br
      
    
    </summary>
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
</feed>
